/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.fbi.sbs.online.code.txn88480.domain;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Tia88480 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tia88480\",\"namespace\":\"org.fbi.sbs.online.code.txn88480.domain\",\"fields\":[{\"name\":\"pastyp\",\"type\":\"string\"},{\"name\":\"inpflg\",\"type\":\"string\"},{\"name\":\"sbknum\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence pastyp;
  @Deprecated public java.lang.CharSequence inpflg;
  @Deprecated public java.lang.CharSequence sbknum;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Tia88480() {}

  /**
   * All-args constructor.
   */
  public Tia88480(java.lang.CharSequence pastyp, java.lang.CharSequence inpflg, java.lang.CharSequence sbknum) {
    this.pastyp = pastyp;
    this.inpflg = inpflg;
    this.sbknum = sbknum;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pastyp;
    case 1: return inpflg;
    case 2: return sbknum;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pastyp = (java.lang.CharSequence)value$; break;
    case 1: inpflg = (java.lang.CharSequence)value$; break;
    case 2: sbknum = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pastyp' field.
   */
  public java.lang.CharSequence getPastyp() {
    return pastyp;
  }

  /**
   * Sets the value of the 'pastyp' field.
   * @param value the value to set.
   */
  public void setPastyp(java.lang.CharSequence value) {
    this.pastyp = value;
  }

  /**
   * Gets the value of the 'inpflg' field.
   */
  public java.lang.CharSequence getInpflg() {
    return inpflg;
  }

  /**
   * Sets the value of the 'inpflg' field.
   * @param value the value to set.
   */
  public void setInpflg(java.lang.CharSequence value) {
    this.inpflg = value;
  }

  /**
   * Gets the value of the 'sbknum' field.
   */
  public java.lang.CharSequence getSbknum() {
    return sbknum;
  }

  /**
   * Sets the value of the 'sbknum' field.
   * @param value the value to set.
   */
  public void setSbknum(java.lang.CharSequence value) {
    this.sbknum = value;
  }

  /** Creates a new Tia88480 RecordBuilder */
  public static Tia88480.Builder newBuilder() {
    return new Tia88480.Builder();
  }
  
  /** Creates a new Tia88480 RecordBuilder by copying an existing Builder */
  public static Tia88480.Builder newBuilder(Tia88480.Builder other) {
    return new Tia88480.Builder(other);
  }
  
  /** Creates a new Tia88480 RecordBuilder by copying an existing Tia88480 instance */
  public static Tia88480.Builder newBuilder(Tia88480 other) {
    return new Tia88480.Builder(other);
  }
  
  /**
   * RecordBuilder for Tia88480 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tia88480>
    implements org.apache.avro.data.RecordBuilder<Tia88480> {

    private java.lang.CharSequence pastyp;
    private java.lang.CharSequence inpflg;
    private java.lang.CharSequence sbknum;

    /** Creates a new Builder */
    private Builder() {
      super(Tia88480.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Tia88480.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pastyp)) {
        this.pastyp = data().deepCopy(fields()[0].schema(), other.pastyp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inpflg)) {
        this.inpflg = data().deepCopy(fields()[1].schema(), other.inpflg);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sbknum)) {
        this.sbknum = data().deepCopy(fields()[2].schema(), other.sbknum);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Tia88480 instance */
    private Builder(Tia88480 other) {
            super(Tia88480.SCHEMA$);
      if (isValidValue(fields()[0], other.pastyp)) {
        this.pastyp = data().deepCopy(fields()[0].schema(), other.pastyp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inpflg)) {
        this.inpflg = data().deepCopy(fields()[1].schema(), other.inpflg);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sbknum)) {
        this.sbknum = data().deepCopy(fields()[2].schema(), other.sbknum);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'pastyp' field */
    public java.lang.CharSequence getPastyp() {
      return pastyp;
    }
    
    /** Sets the value of the 'pastyp' field */
    public Tia88480.Builder setPastyp(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.pastyp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'pastyp' field has been set */
    public boolean hasPastyp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'pastyp' field */
    public Tia88480.Builder clearPastyp() {
      pastyp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'inpflg' field */
    public java.lang.CharSequence getInpflg() {
      return inpflg;
    }
    
    /** Sets the value of the 'inpflg' field */
    public Tia88480.Builder setInpflg(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.inpflg = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'inpflg' field has been set */
    public boolean hasInpflg() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'inpflg' field */
    public Tia88480.Builder clearInpflg() {
      inpflg = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'sbknum' field */
    public java.lang.CharSequence getSbknum() {
      return sbknum;
    }
    
    /** Sets the value of the 'sbknum' field */
    public Tia88480.Builder setSbknum(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.sbknum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'sbknum' field has been set */
    public boolean hasSbknum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'sbknum' field */
    public Tia88480.Builder clearSbknum() {
      sbknum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Tia88480 build() {
      try {
        Tia88480 record = new Tia88480();
        record.pastyp = fieldSetFlags()[0] ? this.pastyp : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.inpflg = fieldSetFlags()[1] ? this.inpflg : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.sbknum = fieldSetFlags()[2] ? this.sbknum : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
