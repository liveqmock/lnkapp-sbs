/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.fbi.sbs.domain.tia;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Tia8848 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tia8848\",\"namespace\":\"org.fbi.sbs.domain.tia\",\"fields\":[{\"name\":\"batseq\",\"type\":\"string\"},{\"name\":\"orgidt\",\"type\":\"string\"},{\"name\":\"depnum\",\"type\":\"string\"},{\"name\":\"pastyp\",\"type\":\"string\"},{\"name\":\"inpflg\",\"type\":\"string\"},{\"name\":\"sbknum\",\"type\":\"string\"},{\"name\":\"wrkunt\",\"type\":\"string\"},{\"name\":\"stmadd\",\"type\":\"string\"},{\"name\":\"intnet\",\"type\":\"string\"},{\"name\":\"engnam\",\"type\":\"string\"},{\"name\":\"regadd\",\"type\":\"string\"},{\"name\":\"coradd\",\"type\":\"string\"},{\"name\":\"cusnam\",\"type\":\"string\"},{\"name\":\"funcde\",\"type\":\"string\"},{\"name\":\"begnum\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence batseq;
  @Deprecated public java.lang.CharSequence orgidt;
  @Deprecated public java.lang.CharSequence depnum;
  @Deprecated public java.lang.CharSequence pastyp;
  @Deprecated public java.lang.CharSequence inpflg;
  @Deprecated public java.lang.CharSequence sbknum;
  @Deprecated public java.lang.CharSequence wrkunt;
  @Deprecated public java.lang.CharSequence stmadd;
  @Deprecated public java.lang.CharSequence intnet;
  @Deprecated public java.lang.CharSequence engnam;
  @Deprecated public java.lang.CharSequence regadd;
  @Deprecated public java.lang.CharSequence coradd;
  @Deprecated public java.lang.CharSequence cusnam;
  @Deprecated public java.lang.CharSequence funcde;
  @Deprecated public java.lang.CharSequence begnum;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Tia8848() {}

  /**
   * All-args constructor.
   */
  public Tia8848(java.lang.CharSequence batseq, java.lang.CharSequence orgidt, java.lang.CharSequence depnum, java.lang.CharSequence pastyp, java.lang.CharSequence inpflg, java.lang.CharSequence sbknum, java.lang.CharSequence wrkunt, java.lang.CharSequence stmadd, java.lang.CharSequence intnet, java.lang.CharSequence engnam, java.lang.CharSequence regadd, java.lang.CharSequence coradd, java.lang.CharSequence cusnam, java.lang.CharSequence funcde, java.lang.CharSequence begnum) {
    this.batseq = batseq;
    this.orgidt = orgidt;
    this.depnum = depnum;
    this.pastyp = pastyp;
    this.inpflg = inpflg;
    this.sbknum = sbknum;
    this.wrkunt = wrkunt;
    this.stmadd = stmadd;
    this.intnet = intnet;
    this.engnam = engnam;
    this.regadd = regadd;
    this.coradd = coradd;
    this.cusnam = cusnam;
    this.funcde = funcde;
    this.begnum = begnum;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return batseq;
    case 1: return orgidt;
    case 2: return depnum;
    case 3: return pastyp;
    case 4: return inpflg;
    case 5: return sbknum;
    case 6: return wrkunt;
    case 7: return stmadd;
    case 8: return intnet;
    case 9: return engnam;
    case 10: return regadd;
    case 11: return coradd;
    case 12: return cusnam;
    case 13: return funcde;
    case 14: return begnum;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: batseq = (java.lang.CharSequence)value$; break;
    case 1: orgidt = (java.lang.CharSequence)value$; break;
    case 2: depnum = (java.lang.CharSequence)value$; break;
    case 3: pastyp = (java.lang.CharSequence)value$; break;
    case 4: inpflg = (java.lang.CharSequence)value$; break;
    case 5: sbknum = (java.lang.CharSequence)value$; break;
    case 6: wrkunt = (java.lang.CharSequence)value$; break;
    case 7: stmadd = (java.lang.CharSequence)value$; break;
    case 8: intnet = (java.lang.CharSequence)value$; break;
    case 9: engnam = (java.lang.CharSequence)value$; break;
    case 10: regadd = (java.lang.CharSequence)value$; break;
    case 11: coradd = (java.lang.CharSequence)value$; break;
    case 12: cusnam = (java.lang.CharSequence)value$; break;
    case 13: funcde = (java.lang.CharSequence)value$; break;
    case 14: begnum = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'batseq' field.
   */
  public java.lang.CharSequence getBatseq() {
    return batseq;
  }

  /**
   * Sets the value of the 'batseq' field.
   * @param value the value to set.
   */
  public void setBatseq(java.lang.CharSequence value) {
    this.batseq = value;
  }

  /**
   * Gets the value of the 'orgidt' field.
   */
  public java.lang.CharSequence getOrgidt() {
    return orgidt;
  }

  /**
   * Sets the value of the 'orgidt' field.
   * @param value the value to set.
   */
  public void setOrgidt(java.lang.CharSequence value) {
    this.orgidt = value;
  }

  /**
   * Gets the value of the 'depnum' field.
   */
  public java.lang.CharSequence getDepnum() {
    return depnum;
  }

  /**
   * Sets the value of the 'depnum' field.
   * @param value the value to set.
   */
  public void setDepnum(java.lang.CharSequence value) {
    this.depnum = value;
  }

  /**
   * Gets the value of the 'pastyp' field.
   */
  public java.lang.CharSequence getPastyp() {
    return pastyp;
  }

  /**
   * Sets the value of the 'pastyp' field.
   * @param value the value to set.
   */
  public void setPastyp(java.lang.CharSequence value) {
    this.pastyp = value;
  }

  /**
   * Gets the value of the 'inpflg' field.
   */
  public java.lang.CharSequence getInpflg() {
    return inpflg;
  }

  /**
   * Sets the value of the 'inpflg' field.
   * @param value the value to set.
   */
  public void setInpflg(java.lang.CharSequence value) {
    this.inpflg = value;
  }

  /**
   * Gets the value of the 'sbknum' field.
   */
  public java.lang.CharSequence getSbknum() {
    return sbknum;
  }

  /**
   * Sets the value of the 'sbknum' field.
   * @param value the value to set.
   */
  public void setSbknum(java.lang.CharSequence value) {
    this.sbknum = value;
  }

  /**
   * Gets the value of the 'wrkunt' field.
   */
  public java.lang.CharSequence getWrkunt() {
    return wrkunt;
  }

  /**
   * Sets the value of the 'wrkunt' field.
   * @param value the value to set.
   */
  public void setWrkunt(java.lang.CharSequence value) {
    this.wrkunt = value;
  }

  /**
   * Gets the value of the 'stmadd' field.
   */
  public java.lang.CharSequence getStmadd() {
    return stmadd;
  }

  /**
   * Sets the value of the 'stmadd' field.
   * @param value the value to set.
   */
  public void setStmadd(java.lang.CharSequence value) {
    this.stmadd = value;
  }

  /**
   * Gets the value of the 'intnet' field.
   */
  public java.lang.CharSequence getIntnet() {
    return intnet;
  }

  /**
   * Sets the value of the 'intnet' field.
   * @param value the value to set.
   */
  public void setIntnet(java.lang.CharSequence value) {
    this.intnet = value;
  }

  /**
   * Gets the value of the 'engnam' field.
   */
  public java.lang.CharSequence getEngnam() {
    return engnam;
  }

  /**
   * Sets the value of the 'engnam' field.
   * @param value the value to set.
   */
  public void setEngnam(java.lang.CharSequence value) {
    this.engnam = value;
  }

  /**
   * Gets the value of the 'regadd' field.
   */
  public java.lang.CharSequence getRegadd() {
    return regadd;
  }

  /**
   * Sets the value of the 'regadd' field.
   * @param value the value to set.
   */
  public void setRegadd(java.lang.CharSequence value) {
    this.regadd = value;
  }

  /**
   * Gets the value of the 'coradd' field.
   */
  public java.lang.CharSequence getCoradd() {
    return coradd;
  }

  /**
   * Sets the value of the 'coradd' field.
   * @param value the value to set.
   */
  public void setCoradd(java.lang.CharSequence value) {
    this.coradd = value;
  }

  /**
   * Gets the value of the 'cusnam' field.
   */
  public java.lang.CharSequence getCusnam() {
    return cusnam;
  }

  /**
   * Sets the value of the 'cusnam' field.
   * @param value the value to set.
   */
  public void setCusnam(java.lang.CharSequence value) {
    this.cusnam = value;
  }

  /**
   * Gets the value of the 'funcde' field.
   */
  public java.lang.CharSequence getFuncde() {
    return funcde;
  }

  /**
   * Sets the value of the 'funcde' field.
   * @param value the value to set.
   */
  public void setFuncde(java.lang.CharSequence value) {
    this.funcde = value;
  }

  /**
   * Gets the value of the 'begnum' field.
   */
  public java.lang.CharSequence getBegnum() {
    return begnum;
  }

  /**
   * Sets the value of the 'begnum' field.
   * @param value the value to set.
   */
  public void setBegnum(java.lang.CharSequence value) {
    this.begnum = value;
  }

  /** Creates a new Tia8848 RecordBuilder */
  public static org.fbi.sbs.domain.tia.Tia8848.Builder newBuilder() {
    return new org.fbi.sbs.domain.tia.Tia8848.Builder();
  }
  
  /** Creates a new Tia8848 RecordBuilder by copying an existing Builder */
  public static org.fbi.sbs.domain.tia.Tia8848.Builder newBuilder(org.fbi.sbs.domain.tia.Tia8848.Builder other) {
    return new org.fbi.sbs.domain.tia.Tia8848.Builder(other);
  }
  
  /** Creates a new Tia8848 RecordBuilder by copying an existing Tia8848 instance */
  public static org.fbi.sbs.domain.tia.Tia8848.Builder newBuilder(org.fbi.sbs.domain.tia.Tia8848 other) {
    return new org.fbi.sbs.domain.tia.Tia8848.Builder(other);
  }
  
  /**
   * RecordBuilder for Tia8848 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tia8848>
    implements org.apache.avro.data.RecordBuilder<Tia8848> {

    private java.lang.CharSequence batseq;
    private java.lang.CharSequence orgidt;
    private java.lang.CharSequence depnum;
    private java.lang.CharSequence pastyp;
    private java.lang.CharSequence inpflg;
    private java.lang.CharSequence sbknum;
    private java.lang.CharSequence wrkunt;
    private java.lang.CharSequence stmadd;
    private java.lang.CharSequence intnet;
    private java.lang.CharSequence engnam;
    private java.lang.CharSequence regadd;
    private java.lang.CharSequence coradd;
    private java.lang.CharSequence cusnam;
    private java.lang.CharSequence funcde;
    private java.lang.CharSequence begnum;

    /** Creates a new Builder */
    private Builder() {
      super(org.fbi.sbs.domain.tia.Tia8848.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.fbi.sbs.domain.tia.Tia8848.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.batseq)) {
        this.batseq = data().deepCopy(fields()[0].schema(), other.batseq);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgidt)) {
        this.orgidt = data().deepCopy(fields()[1].schema(), other.orgidt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.depnum)) {
        this.depnum = data().deepCopy(fields()[2].schema(), other.depnum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pastyp)) {
        this.pastyp = data().deepCopy(fields()[3].schema(), other.pastyp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.inpflg)) {
        this.inpflg = data().deepCopy(fields()[4].schema(), other.inpflg);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sbknum)) {
        this.sbknum = data().deepCopy(fields()[5].schema(), other.sbknum);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.wrkunt)) {
        this.wrkunt = data().deepCopy(fields()[6].schema(), other.wrkunt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.stmadd)) {
        this.stmadd = data().deepCopy(fields()[7].schema(), other.stmadd);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.intnet)) {
        this.intnet = data().deepCopy(fields()[8].schema(), other.intnet);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.engnam)) {
        this.engnam = data().deepCopy(fields()[9].schema(), other.engnam);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.regadd)) {
        this.regadd = data().deepCopy(fields()[10].schema(), other.regadd);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.coradd)) {
        this.coradd = data().deepCopy(fields()[11].schema(), other.coradd);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.cusnam)) {
        this.cusnam = data().deepCopy(fields()[12].schema(), other.cusnam);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.funcde)) {
        this.funcde = data().deepCopy(fields()[13].schema(), other.funcde);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.begnum)) {
        this.begnum = data().deepCopy(fields()[14].schema(), other.begnum);
        fieldSetFlags()[14] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Tia8848 instance */
    private Builder(org.fbi.sbs.domain.tia.Tia8848 other) {
            super(org.fbi.sbs.domain.tia.Tia8848.SCHEMA$);
      if (isValidValue(fields()[0], other.batseq)) {
        this.batseq = data().deepCopy(fields()[0].schema(), other.batseq);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgidt)) {
        this.orgidt = data().deepCopy(fields()[1].schema(), other.orgidt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.depnum)) {
        this.depnum = data().deepCopy(fields()[2].schema(), other.depnum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pastyp)) {
        this.pastyp = data().deepCopy(fields()[3].schema(), other.pastyp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.inpflg)) {
        this.inpflg = data().deepCopy(fields()[4].schema(), other.inpflg);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sbknum)) {
        this.sbknum = data().deepCopy(fields()[5].schema(), other.sbknum);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.wrkunt)) {
        this.wrkunt = data().deepCopy(fields()[6].schema(), other.wrkunt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.stmadd)) {
        this.stmadd = data().deepCopy(fields()[7].schema(), other.stmadd);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.intnet)) {
        this.intnet = data().deepCopy(fields()[8].schema(), other.intnet);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.engnam)) {
        this.engnam = data().deepCopy(fields()[9].schema(), other.engnam);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.regadd)) {
        this.regadd = data().deepCopy(fields()[10].schema(), other.regadd);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.coradd)) {
        this.coradd = data().deepCopy(fields()[11].schema(), other.coradd);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.cusnam)) {
        this.cusnam = data().deepCopy(fields()[12].schema(), other.cusnam);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.funcde)) {
        this.funcde = data().deepCopy(fields()[13].schema(), other.funcde);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.begnum)) {
        this.begnum = data().deepCopy(fields()[14].schema(), other.begnum);
        fieldSetFlags()[14] = true;
      }
    }

    /** Gets the value of the 'batseq' field */
    public java.lang.CharSequence getBatseq() {
      return batseq;
    }
    
    /** Sets the value of the 'batseq' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setBatseq(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.batseq = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'batseq' field has been set */
    public boolean hasBatseq() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'batseq' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearBatseq() {
      batseq = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'orgidt' field */
    public java.lang.CharSequence getOrgidt() {
      return orgidt;
    }
    
    /** Sets the value of the 'orgidt' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setOrgidt(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.orgidt = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'orgidt' field has been set */
    public boolean hasOrgidt() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'orgidt' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearOrgidt() {
      orgidt = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'depnum' field */
    public java.lang.CharSequence getDepnum() {
      return depnum;
    }
    
    /** Sets the value of the 'depnum' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setDepnum(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.depnum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'depnum' field has been set */
    public boolean hasDepnum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'depnum' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearDepnum() {
      depnum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'pastyp' field */
    public java.lang.CharSequence getPastyp() {
      return pastyp;
    }
    
    /** Sets the value of the 'pastyp' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setPastyp(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.pastyp = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'pastyp' field has been set */
    public boolean hasPastyp() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'pastyp' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearPastyp() {
      pastyp = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'inpflg' field */
    public java.lang.CharSequence getInpflg() {
      return inpflg;
    }
    
    /** Sets the value of the 'inpflg' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setInpflg(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.inpflg = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'inpflg' field has been set */
    public boolean hasInpflg() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'inpflg' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearInpflg() {
      inpflg = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'sbknum' field */
    public java.lang.CharSequence getSbknum() {
      return sbknum;
    }
    
    /** Sets the value of the 'sbknum' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setSbknum(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.sbknum = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'sbknum' field has been set */
    public boolean hasSbknum() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'sbknum' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearSbknum() {
      sbknum = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'wrkunt' field */
    public java.lang.CharSequence getWrkunt() {
      return wrkunt;
    }
    
    /** Sets the value of the 'wrkunt' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setWrkunt(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.wrkunt = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'wrkunt' field has been set */
    public boolean hasWrkunt() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'wrkunt' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearWrkunt() {
      wrkunt = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'stmadd' field */
    public java.lang.CharSequence getStmadd() {
      return stmadd;
    }
    
    /** Sets the value of the 'stmadd' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setStmadd(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.stmadd = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'stmadd' field has been set */
    public boolean hasStmadd() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'stmadd' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearStmadd() {
      stmadd = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'intnet' field */
    public java.lang.CharSequence getIntnet() {
      return intnet;
    }
    
    /** Sets the value of the 'intnet' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setIntnet(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.intnet = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'intnet' field has been set */
    public boolean hasIntnet() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'intnet' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearIntnet() {
      intnet = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'engnam' field */
    public java.lang.CharSequence getEngnam() {
      return engnam;
    }
    
    /** Sets the value of the 'engnam' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setEngnam(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.engnam = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'engnam' field has been set */
    public boolean hasEngnam() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'engnam' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearEngnam() {
      engnam = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'regadd' field */
    public java.lang.CharSequence getRegadd() {
      return regadd;
    }
    
    /** Sets the value of the 'regadd' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setRegadd(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.regadd = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'regadd' field has been set */
    public boolean hasRegadd() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'regadd' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearRegadd() {
      regadd = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'coradd' field */
    public java.lang.CharSequence getCoradd() {
      return coradd;
    }
    
    /** Sets the value of the 'coradd' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setCoradd(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.coradd = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'coradd' field has been set */
    public boolean hasCoradd() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'coradd' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearCoradd() {
      coradd = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'cusnam' field */
    public java.lang.CharSequence getCusnam() {
      return cusnam;
    }
    
    /** Sets the value of the 'cusnam' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setCusnam(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.cusnam = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'cusnam' field has been set */
    public boolean hasCusnam() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'cusnam' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearCusnam() {
      cusnam = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'funcde' field */
    public java.lang.CharSequence getFuncde() {
      return funcde;
    }
    
    /** Sets the value of the 'funcde' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setFuncde(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.funcde = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'funcde' field has been set */
    public boolean hasFuncde() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'funcde' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearFuncde() {
      funcde = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'begnum' field */
    public java.lang.CharSequence getBegnum() {
      return begnum;
    }
    
    /** Sets the value of the 'begnum' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder setBegnum(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.begnum = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'begnum' field has been set */
    public boolean hasBegnum() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'begnum' field */
    public org.fbi.sbs.domain.tia.Tia8848.Builder clearBegnum() {
      begnum = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public Tia8848 build() {
      try {
        Tia8848 record = new Tia8848();
        record.batseq = fieldSetFlags()[0] ? this.batseq : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.orgidt = fieldSetFlags()[1] ? this.orgidt : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.depnum = fieldSetFlags()[2] ? this.depnum : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.pastyp = fieldSetFlags()[3] ? this.pastyp : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.inpflg = fieldSetFlags()[4] ? this.inpflg : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.sbknum = fieldSetFlags()[5] ? this.sbknum : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.wrkunt = fieldSetFlags()[6] ? this.wrkunt : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.stmadd = fieldSetFlags()[7] ? this.stmadd : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.intnet = fieldSetFlags()[8] ? this.intnet : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.engnam = fieldSetFlags()[9] ? this.engnam : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.regadd = fieldSetFlags()[10] ? this.regadd : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.coradd = fieldSetFlags()[11] ? this.coradd : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.cusnam = fieldSetFlags()[12] ? this.cusnam : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.funcde = fieldSetFlags()[13] ? this.funcde : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.begnum = fieldSetFlags()[14] ? this.begnum : (java.lang.CharSequence) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
